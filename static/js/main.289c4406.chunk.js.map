{"version":3,"sources":["lib/asyncUtils.js","api/posts.js","modules/boardReducer.js","modules/boardReducer_json.js","modules/index.js","components/IndexSections/Modals.js","components/BoardList.js","components/BoardInsert.js","lib/hooks.js","containers/BoardListContainer.js","components/Board.js","containers/BoardContainer.js","containers/BoardInsertContainer.js","containers/Git.js","routes/routes.js","App.js","index.js"],"names":["reducerUtils","initialData","loading","data","error","prevState","payload","createPromiseThunk","type","promiseCreator","SUCCESS","ERROR","param","dispatch","a","defaultIdSelector","handleAsyncActions","key","keepData","state","action","handleAsyncActionsById","id","meta","getBoardList","settingHeaders","headers","axios","get","response","rows","getBoardDtl","boardSeq","insertBoard","board","console","log","formData","FormData","append","boardTitle","boardCn","post","deleteBoard","delete","GET_BOARD_LIST","GET_BOARD_LIST_SUCCESS","GET_BOARD_LIST_ERROR","GET_BOARD_DTL","GET_BOARD_DTL_SUCCESS","GET_BOARD_DTL_ERROR","INSERT_BOARD","INSERT_BOARD_SUCCESS","INSERT_BOARD_ERROR","DELETE_BOARD","DELETE_BOARD_SUCCESS","DELETE_BOARD_ERROR","BOARD_TEST","postsAPI","idSelector","createPromiseThunkById","boardTest","createAction","text","text2","initialState","boards","result","rootReducer","combineReducers","boardReducer","boardReducer_json","filter","concat","React","Board","memo","onClick","useCallback","useState","toggleYn","setToggleYn","toggleModal","Col","lg","Card","className","CardBody","Button","color","href","e","preventDefault","Modal","isOpen","toggle","aria-label","data-dismiss","aria-hidden","BoardList","map","BoardInsert","onChange","onSubmit","name","value","useInputs","initialForm","form","setForm","target","BoardListContainer","useSelector","useDispatch","reset","alert","onDelete","useEffect","boardPhotoSbst","style","width","src","BoardContainer","match","params","BoardInsertContainer","setBoard","Landing","mainRef","useRef","document","documentElement","scrollTop","scrollingElement","current","scrollIntoView","insertAlert","setInsertAlert","invalidAlert","setInvalidAlert","deleteAlert","setDeleteAlert","setTimeout","ref","Container","Row","placeholder","marginBottom","size","xmlns","preserveAspectRatio","version","viewBox","x","y","points","Alert","fade","position","top","zIndex","undefined","display","justifyContent","alignItems","marginTop","Spinner","height","routes","path","component","Git","exact","RouteWithSubRoutes","route","render","props","createGlobalStyle","App","i","Component","customHistory","createBrowserHistory","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","withExtraArgument","history","logger","ReactDOM","basename","getElementById"],"mappings":"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","file":"static/js/main.289c4406.chunk.js","sourcesContent":["// 리듀서에서 사용 할 수 있는 여러 유틸 함수들입니다.\r\nexport const reducerUtils = {\r\n  // 초기 상태. 초기 data 값은 기본적으로 null 이지만\r\n  // 바꿀 수도 있습니다.\r\n  initial: (initialData = null) => ({\r\n    loading: false,\r\n    data: initialData,\r\n    error: null\r\n  }),\r\n  // 로딩중 상태. prevState의 경우엔 기본값은 null 이지만\r\n  // 따로 값을 지정하면 null 로 바꾸지 않고 다른 값을 유지시킬 수 있습니다.\r\n  loading: (prevState = null) => ({\r\n    loading: true,\r\n    data: prevState,\r\n    error: null\r\n  }),\r\n  // 성공 상태\r\n  success: payload => ({\r\n    loading: false,\r\n    data: payload,\r\n    error: null\r\n  }),\r\n  // 실패 상태\r\n  error: error => ({\r\n    loading: false,\r\n    data: null,\r\n    error: error\r\n  })\r\n};\r\n\r\n// Promise에 기반한 Thunk를 만들어주는 함수입니다.\r\nexport const createPromiseThunk = (type, promiseCreator) => {\r\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n\r\n  // 이 함수는 promiseCreator가 단 하나의 파라미터만 받는다는 전제하에 작성되었습니다.\r\n  // 만약 여러 종류의 파라미터를 전달해야하는 상황에서는 객체 타입의 파라미터를 받아오도록 하면 됩니다.\r\n  // 예: writeComment({ postId: 1, text: '댓글 내용' });\r\n  return param => async dispatch => {\r\n    // 요청 시작\r\n    dispatch({ type, param });\r\n    try {\r\n      // 결과물의 이름을 payload 라는 이름으로 통일시킵니다.\r\n      const payload = await promiseCreator(param);\r\n      dispatch({ type: SUCCESS, payload }); // 성공\r\n    } catch (e) {\r\n      dispatch({ type: ERROR, payload: e, error: true }); // 실패\r\n    }\r\n  };\r\n};\r\n\r\n\r\n// 특정 id 를 처리하는 Thunk 생성함수\r\nconst defaultIdSelector = param => param;\r\nexport const createPromiseThunkById = (\r\n  type,\r\n  promiseCreator,\r\n  // 파라미터에서 id 를 어떻게 선택 할 지 정의하는 함수입니다.\r\n  // 기본 값으로는 파라미터를 그대로 id로 사용합니다.\r\n  // 하지만 만약 파라미터가 { id: 1, details: true } 이런 형태라면\r\n  // idSelector 를 param => param.id 이런식으로 설정 할 수 있곘죠.\r\n  idSelector = defaultIdSelector\r\n) => {\r\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n\r\n  return param => async dispatch => {\r\n    const id = idSelector(param);\r\n    dispatch({ type, meta: id });\r\n    try {\r\n      const payload = await promiseCreator(param);\r\n      dispatch({ type: SUCCESS, payload, meta: id });\r\n    } catch (e) {\r\n      dispatch({ type: ERROR, error: true, payload: e, meta: id });\r\n    }\r\n  };\r\n};\r\n\r\n// 비동기 관련 액션들을 처리하는 리듀서를 만들어줍니다.\r\n// type 은 액션의 타입, key 는 상태의 key (예: posts, post) 입니다.\r\nexport const handleAsyncActions = (type, key, keepData = false) => {\r\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n  return (state, action) => {\r\n    switch (action.type) {\r\n      case type:\r\n        return {\r\n          ...state,\r\n          [key]: reducerUtils.loading(keepData ? state[key].data : null)\r\n        };\r\n      case SUCCESS:\r\n        return {\r\n          ...state,\r\n          [key]: reducerUtils.success(action.payload)\r\n        };\r\n      case ERROR:\r\n        return {\r\n          ...state,\r\n          [key]: reducerUtils.error(action.error)\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};\r\n\r\n// id별로 처리하는 유틸함수\r\nexport const handleAsyncActionsById = (type, key, keepData = false) => {\r\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n  return (state, action) => {\r\n    const id = action.meta;\r\n    switch (action.type) {\r\n      case type:\r\n        return {\r\n          ...state,\r\n          [key]: {\r\n            ...state[key],\r\n            [id]: reducerUtils.loading(\r\n              // state[key][id]가 만들어져있지 않을 수도 있으니까 유효성을 먼저 검사 후 data 조회\r\n              keepData ? state[key][id] && state[key][id].data : null\r\n            )\r\n          }\r\n        };\r\n      case SUCCESS:\r\n        return {\r\n          ...state,\r\n          [key]: {\r\n            ...state[key],\r\n            [id]: reducerUtils.success(action.payload)\r\n          }\r\n        };\r\n      case ERROR:\r\n        return {\r\n          ...state,\r\n          [key]: {\r\n            ...state[key],\r\n            [id]: reducerUtils.error(action.payload)\r\n          }\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};","import axios from 'axios';\r\n\r\nexport const getBoardList = async() => {\r\n    const settingHeaders = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const response = await axios.get(`http://localhost:8080/allEars/board`, settingHeaders);\r\n    return response.data.rows;\r\n}\r\n\r\nexport const getBoardDtl = async(boardSeq) => {\r\n    const settingHeaders = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const response = await axios.get(`http://localhost:8080/allEars/board/${boardSeq}`, settingHeaders);\r\n    return response.data;\r\n}\r\n\r\nexport const insertBoard = async(board) => {\r\n\r\n    console.log(board);\r\n    const formData = new FormData();\r\n    formData.append(\"boardTitle\", board.boardTitle);\r\n    formData.append(\"boardCn\", board.boardCn);\r\n    const settingHeaders = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    }\r\n\r\n    const response = await axios.post(`http://localhost:8080/allEars/board`, formData, settingHeaders);\r\n    return response.data;\r\n}\r\n\r\nexport const deleteBoard = async(boardSeq) => {\r\n\r\n    const settingHeaders = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    }\r\n\r\n    const response = await axios.delete(`http://localhost:8080/allEars/board/${boardSeq}`, settingHeaders);\r\n    return response.data;\r\n}","import produce from 'immer'; // immer 불러오기\r\nimport {\r\n    createPromiseThunk,\r\n    createPromiseThunkById,\r\n    reducerUtils,\r\n    handleAsyncActions,\r\n    handleAsyncActionsById\r\n} from '../lib/asyncUtils';\r\nimport * as postsAPI from '../api/posts'; // api/posts 안의 함수 모두 불러오기\r\nimport { createAction } from 'redux-actions';\r\n\r\n// 액션 타입 정의\r\nconst GET_BOARD_LIST = 'board/GET_BOARD_LIST';\r\nconst GET_BOARD_LIST_SUCCESS = 'board/GET_BOARD_LIST_SUCCESS';\r\nconst GET_BOARD_LIST_ERROR = 'board/GET_BOARD_LIST_ERROR';\r\n\r\nconst GET_BOARD_DTL = 'board/GET_BOARD_DTL';\r\nconst GET_BOARD_DTL_SUCCESS = 'board/GET_BOARD_DTL_SUCCESS';\r\nconst GET_BOARD_DTL_ERROR = 'board/GET_BOARD_DTL_ERROR';\r\n\r\nconst INSERT_BOARD = 'board/INSERT_BOARD';\r\nconst INSERT_BOARD_SUCCESS = 'board/INSERT_BOARD_SUCCESS';\r\nconst INSERT_BOARD_ERROR = 'board/INSERT_BOARD_ERROR';\r\n\r\nconst DELETE_BOARD = 'board/DELETE_BOARD';\r\nconst DELETE_BOARD_SUCCESS = 'board/DELETE_BOARD_SUCCESS';\r\nconst DELETE_BOARD_ERROR = 'board/DELETE_BOARD_ERROR';\r\n\r\nconst BOARD_TEST = 'board/TEST';\r\n\r\n// 액션 생성함수 정의\r\nexport const getBoardList = createPromiseThunk(GET_BOARD_LIST, postsAPI.getBoardList);\r\nexport const getBoardDtl = createPromiseThunkById(GET_BOARD_DTL, postsAPI.getBoardDtl);\r\nexport const insertBoard = createPromiseThunk(INSERT_BOARD, postsAPI.insertBoard);\r\nexport const deleteBoard = createPromiseThunk(DELETE_BOARD, postsAPI.deleteBoard);\r\nexport const boardTest = createAction(BOARD_TEST, (text, text2) => ({ text, text2, id: 3 }));\r\n// 초기상태 정의\r\nconst initialState = {\r\n    boards: reducerUtils.initial(),\r\n    board: {},\r\n    result: reducerUtils.initial()\r\n}\r\n\r\n// 리듀서 작성\r\nexport default function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_BOARD_LIST:\r\n        case GET_BOARD_LIST_SUCCESS:\r\n        case GET_BOARD_LIST_ERROR:\r\n            return handleAsyncActions(GET_BOARD_LIST, 'boards', true)(state, action);\r\n        case GET_BOARD_DTL:\r\n        case GET_BOARD_DTL_SUCCESS:\r\n        case GET_BOARD_DTL_ERROR:\r\n            return handleAsyncActionsById(GET_BOARD_DTL, 'board', true)(state, action);\r\n        case INSERT_BOARD:\r\n        case INSERT_BOARD_ERROR:\r\n        case INSERT_BOARD_SUCCESS:\r\n            return handleAsyncActions(INSERT_BOARD, 'result', true)(state, action);\r\n        // return {\r\n        //     ...state,\r\n        //     boards: reducerUtils.success((state.boards.data).concat(action.payload.data))\r\n        // }\r\n        case DELETE_BOARD:\r\n        case DELETE_BOARD_ERROR:\r\n        case DELETE_BOARD_SUCCESS:\r\n            return handleAsyncActions(DELETE_BOARD, 'result', true)(state, action);\r\n            // return {\r\n            //     ...state,\r\n            //     boards: reducerUtils.success((state.boards.data).filter((board) => board.boardSeq !== action.payload.data))\r\n            // }\r\n        case BOARD_TEST:\r\n            console.log(action.payload);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// 3번째 인자를 사용하면 withExtraArgument 에서 넣어준 값들을 사용 할 수 있습니다.\r\nexport const goToBoardInsert = () => (dispatch, getState, { history }) => {\r\n    history.push('/board/insert');\r\n};","import produce from 'immer'; // immer 불러오기\r\nimport {\r\n    createPromiseThunk,\r\n    createPromiseThunkById,\r\n    reducerUtils,\r\n    handleAsyncActions,\r\n    handleAsyncActionsById\r\n} from '../lib/asyncUtils';\r\nimport * as postsAPI from '../api/posts'; // api/posts 안의 함수 모두 불러오기\r\nimport { createAction } from 'redux-actions';\r\n\r\n// 액션 타입 정의\r\nconst GET_BOARD_LIST = 'board/GET_BOARD_LIST';\r\n\r\nconst GET_BOARD_DTL = 'board/GET_BOARD_DTL';\r\n\r\nconst INSERT_BOARD = 'board/INSERT_BOARD';\r\n\r\nconst DELETE_BOARD = 'board/DELETE_BOARD';\r\n\r\n\r\n// 액션 생성함수 정의\r\nexport const getBoardList = createAction(GET_BOARD_LIST);\r\nexport const getBoardDtl = createAction(GET_BOARD_DTL, boardSeq => boardSeq);\r\nexport const insertBoard = createAction(INSERT_BOARD, board => board);\r\nexport const deleteBoard = createAction(DELETE_BOARD, boardSeq => boardSeq);\r\n\r\n// 초기상태 정의\r\nconst initialState = {\r\n    boards: [\r\n        {\r\n            \"boardSeq\": 1,\r\n            \"boardTitle\": \"Hello\",\r\n            \"boardCn\": \"This is React Project\"\r\n        },\r\n        {\r\n            \"boardSeq\": 2,\r\n            \"boardTitle\": \"BYE\",\r\n            \"boardCn\": \"Sample Project\",\r\n        }\r\n    ],\r\n    board: {}\r\n}\r\n\r\nlet id = 3;\r\n\r\n// 리듀서 작성\r\nexport default function boardReducer_json(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_BOARD_LIST:\r\n            return {\r\n                ...state\r\n            };\r\n        case GET_BOARD_DTL:\r\n            return {\r\n                ...state,\r\n                board: (state.boards).filter(board => board.boardSeq == action.payload)\r\n            };\r\n        case INSERT_BOARD:\r\n            console.log(action);\r\n        return {\r\n            ...state,\r\n            boards: state.boards.concat({ \"boardSeq\": id++, \"boardTitle\": action.payload.boardTitle, \"boardCn\": action.payload.boardCn })\r\n        }\r\n        case DELETE_BOARD:\r\n            console.log(action);\r\n            return {\r\n                ...state,\r\n                boards: (state.boards).filter((board) => board.boardSeq !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// 3번째 인자를 사용하면 withExtraArgument 에서 넣어준 값들을 사용 할 수 있습니다.\r\nexport const goToBoardInsert = () => (dispatch, getState, { history }) => {\r\n    history.push('/board/insert');\r\n};","import { combineReducers } from 'redux';\r\nimport boardReducer from './boardReducer';\r\nimport boardReducer_json from './boardReducer_json';\r\n\r\nconst rootReducer = combineReducers({ boardReducer, boardReducer_json });\r\n\r\nexport default rootReducer;","/*!\r\n\r\n=========================================================\r\n* Argon Design System React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-design-system-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, { useState } from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classnames from \"classnames\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Modal,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\nfunction Modals({ btnYn, btnName, modalType, board, onToggle, toggleYn}) {\r\n  const { boardTitle, boardCn } = board;\r\n  \r\n  return (\r\n    <>\r\n      {/*defaultModal */}\r\n      <Button\r\n        color=\"primary\"\r\n        type=\"button\"\r\n        onClick={onToggle}\r\n        style = {{display: btnYn ? 'block' : 'none'}}\r\n      >\r\n        {btnName}\r\n      </Button>\r\n      <Modal\r\n        className=\"modal-dialog-centered\"\r\n        isOpen={toggleYn}\r\n        toggle={onToggle}\r\n      >\r\n        <div className=\"modal-header\">\r\n          <h6 className=\"modal-title\" id=\"modal-title-default\">\r\n            {boardTitle}\r\n          </h6>\r\n          <button\r\n            aria-label=\"Close\"\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            type=\"button\"\r\n            onClick={onToggle}\r\n          >\r\n            <span aria-hidden={true}>×</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <p>\r\n            {boardCn}\r\n          </p>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <Button\r\n            className=\"ml-auto\"\r\n            color=\"link\"\r\n            data-dismiss=\"modal\"\r\n            type=\"button\"\r\n            onClick={onToggle}\r\n          >\r\n            Close\r\n                </Button>\r\n        </div>\r\n      </Modal>\r\n      {/* <Col md=\"4\">\r\n            <Button\r\n              block\r\n              className=\"mb-3\"\r\n              color=\"warning\"\r\n              type=\"button\"\r\n              onClick={() => this.toggleModal(\"notificationModal\")}\r\n            >\r\n              Notification\r\n            </Button>\r\n            <Modal\r\n              className=\"modal-dialog-centered modal-danger\"\r\n              contentClassName=\"bg-gradient-danger\"\r\n              isOpen={this.state.notificationModal}\r\n              toggle={() => this.toggleModal(\"notificationModal\")}\r\n            >\r\n              <div className=\"modal-header\">\r\n                <h6 className=\"modal-title\" id=\"modal-title-notification\">\r\n                  Your attention is required\r\n                </h6>\r\n                <button\r\n                  aria-label=\"Close\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  type=\"button\"\r\n                  onClick={() => this.toggleModal(\"notificationModal\")}\r\n                >\r\n                  <span aria-hidden={true}>×</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div className=\"py-3 text-center\">\r\n                  <i className=\"ni ni-bell-55 ni-3x\" />\r\n                  <h4 className=\"heading mt-4\">You should read this!</h4>\r\n                  <p>\r\n                    A small river named Duden flows by their place and supplies\r\n                    it with the necessary regelialia.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <Button className=\"btn-white\" color=\"default\" type=\"button\">\r\n                  Ok, Got it\r\n                </Button>\r\n                <Button\r\n                  className=\"text-white ml-auto\"\r\n                  color=\"link\"\r\n                  data-dismiss=\"modal\"\r\n                  type=\"button\"\r\n                  onClick={() => this.toggleModal(\"notificationModal\")}\r\n                >\r\n                  Close\r\n                </Button>\r\n              </div>\r\n            </Modal>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <Button\r\n              block\r\n              color=\"default\"\r\n              type=\"button\"\r\n              onClick={() => this.toggleModal(\"formModal\")}\r\n            >\r\n              Form\r\n            </Button>\r\n            <Modal\r\n              className=\"modal-dialog-centered\"\r\n              size=\"sm\"\r\n              isOpen={this.state.formModal}\r\n              toggle={() => this.toggleModal(\"formModal\")}\r\n            >\r\n              <div className=\"modal-body p-0\">\r\n                <Card className=\"bg-secondary shadow border-0\">\r\n                  <CardHeader className=\"bg-white pb-5\">\r\n                    <div className=\"text-muted text-center mb-3\">\r\n                      <small>Sign in with</small>\r\n                    </div>\r\n                    <div className=\"btn-wrapper text-center\">\r\n                      <Button\r\n                        className=\"btn-icon mt-2 mb-2\"\r\n                        color=\"neutral\"\r\n                        href=\"#pablo\"\r\n                        onClick={e => e.preventDefault()}\r\n                      >\r\n                        <span className=\"btn-inner--icon mr-1\">\r\n                          <img\r\n                            alt=\"...\"\r\n                            src={require(\"assets/img/icons/common/github.svg\")}\r\n                          />\r\n                        </span>\r\n                        <span className=\"btn-inner--text\">Github</span>\r\n                      </Button>\r\n                      <Button\r\n                        className=\"btn-icon mt-2 mb-2 ml-1\"\r\n                        color=\"neutral\"\r\n                        href=\"#pablo\"\r\n                        onClick={e => e.preventDefault()}\r\n                      >\r\n                        <span className=\"btn-inner--icon mr-1\">\r\n                          <img\r\n                            alt=\"...\"\r\n                            src={require(\"assets/img/icons/common/google.svg\")}\r\n                          />\r\n                        </span>\r\n                        <span className=\"btn-inner--text\">Google</span>\r\n                      </Button>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardBody className=\"px-lg-5 py-lg-5\">\r\n                    <div className=\"text-center text-muted mb-4\">\r\n                      <small>Or sign in with credentials</small>\r\n                    </div>\r\n                    <Form role=\"form\">\r\n                      <FormGroup\r\n                        className={classnames(\"mb-3\", {\r\n                          focused: this.state.emailFocused\r\n                        })}\r\n                      >\r\n                        <InputGroup className=\"input-group-alternative\">\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"ni ni-email-83\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"Email\"\r\n                            type=\"email\"\r\n                            onFocus={e => this.setState({ emailFocused: true })}\r\n                            onBlur={e => this.setState({ emailFocused: false })}\r\n                          />\r\n                        </InputGroup>\r\n                      </FormGroup>\r\n                      <FormGroup\r\n                        className={classnames({\r\n                          focused: this.state.passwordFocused\r\n                        })}\r\n                      >\r\n                        <InputGroup className=\"input-group-alternative\">\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"ni ni-lock-circle-open\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"Password\"\r\n                            type=\"password\"\r\n                            autoComplete=\"off\"\r\n                            onFocus={e =>\r\n                              this.setState({ passwordFocused: true })\r\n                            }\r\n                            onBlur={e =>\r\n                              this.setState({ passwordFocused: false })\r\n                            }\r\n                          />\r\n                        </InputGroup>\r\n                      </FormGroup>\r\n                      <div className=\"custom-control custom-control-alternative custom-checkbox\">\r\n                        <input\r\n                          className=\"custom-control-input\"\r\n                          id=\" customCheckLogin\"\r\n                          type=\"checkbox\"\r\n                        />\r\n                        <label\r\n                          className=\"custom-control-label\"\r\n                          htmlFor=\" customCheckLogin\"\r\n                        >\r\n                          <span className=\"text-muted\">Remember me</span>\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"text-center\">\r\n                        <Button className=\"my-4\" color=\"primary\" type=\"button\">\r\n                          Sign in\r\n                        </Button>\r\n                      </div>\r\n                    </Form>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n            </Modal>\r\n          </Col> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Modals);","import React, { useCallback, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n   Badge,\r\n   Button,\r\n   Card,\r\n   CardBody,\r\n   Modal,\r\n   Col\r\n} from \"reactstrap\";\r\nimport Modals from './IndexSections/Modals';\r\n\r\nconst Board = React.memo(function Board({ board, deleteBoard }) {\r\n   const onClick = useCallback((boardSeq) => {\r\n      deleteBoard(boardSeq);\r\n   });\r\n\r\n   const [toggleYn, setToggleYn] = useState(false);\r\n\r\n   console.log(\"render List\");\r\n   const toggleModal = () => {\r\n      setToggleYn(!toggleYn);\r\n   }\r\n\r\n   return (\r\n      <Col lg=\"4\" key={board.boardSeq}>\r\n         <Card className=\"card-lift--hover shadow border-0 mb-5\" onClick={() => toggleModal(\"defaultModal\")}>\r\n            <CardBody className=\"py-5\">\r\n               <div className=\"icon icon-shape icon-shape-primary rounded-circle mb-4\">\r\n                  <i className=\"ni ni-check-bold\" />\r\n               </div>\r\n               <h6 className=\"text-primary text-uppercase\">\r\n                  {board.boardTitle}\r\n               </h6>\r\n               <p className=\"description mt-3\">\r\n                  {board.boardCn}\r\n               </p>\r\n               {/* <div>\r\n                     <Badge color=\"primary\" pill className=\"mr-1\">\r\n                        design\r\n                     </Badge>\r\n                     <Badge color=\"primary\" pill className=\"mr-1\">\r\n                        system\r\n                     </Badge>\r\n                     <Badge color=\"primary\" pill className=\"mr-1\">\r\n                        creative\r\n                     </Badge>\r\n                  </div>  */}\r\n               <Button\r\n                  type=\"button\"\r\n                  color=\"danger\"\r\n                  href=\"#pablo\"\r\n                  onClick={e => { e.preventDefault(); onClick(board.boardSeq) }}\r\n               >\r\n                  DELETE\r\n                  </Button>\r\n               <Modal\r\n                  className=\"modal-dialog-centered\"\r\n                  isOpen={toggleYn}\r\n                  toggle={() => toggleModal(\"defaultModal\")}\r\n               >\r\n                  <div className=\"modal-header\">\r\n                     <h6 className=\"modal-title\" id=\"modal-title-default\">\r\n                        {board.boardTitle}\r\n                     </h6>\r\n                     <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={() => toggleModal(\"defaultModal\")}\r\n                     >\r\n                        <span aria-hidden={true}>×</span>\r\n                     </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                     <p>\r\n                        {board.boardCn}\r\n                     </p>\r\n                  </div>\r\n                  <div className=\"modal-footer\">\r\n                     <Button\r\n                        className=\"ml-auto\"\r\n                        color=\"link\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={() => toggleModal(\"defaultModal\")}\r\n                     >\r\n                        Close\r\n                </Button>\r\n                  </div>\r\n               </Modal>\r\n            </CardBody>\r\n         </Card>\r\n      </Col>\r\n   );\r\n});\r\n\r\nfunction BoardList({ boards, deleteBoard }) {\r\n   return (\r\n      <>\r\n         {boards.map(board => (\r\n            <Board key={board.boardSeq} board={board} deleteBoard={deleteBoard} />\r\n         ))}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default React.memo(BoardList);","import React, { useState } from 'react';\r\n\r\nfunction BoardInsert({ board, onChange, onSubmit }) {\r\n    const { boardTitle, boardCn } = board;\r\n    const insertBoard = e => {\r\n        e.preventDefault();\r\n        onSubmit();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={insertBoard}>\r\n                <input name=\"boardTitle\" value={boardTitle} onChange={onChange} />\r\n                <input name=\"boardCn\" value={boardCn} onChange={onChange} />\r\n                <button>등록</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(BoardInsert);","import React, { useCallback, useState } from 'react';\r\n\r\nexport function useInputs(initialForm) {\r\n    const [form, setForm] = useState(initialForm);\r\n    const onChange = useCallback(e => {\r\n        const {name, value} = e.target;\r\n        setForm(form => ({\r\n            ...form,\r\n            [name]: value\r\n        }));\r\n    }, []);\r\n    const reset = useCallback(() => setForm(initialForm), [initialForm]);\r\n    return [form, onChange, reset];\r\n};","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport BoardList from '../components/BoardList';\r\nimport { getBoardList, goToBoardInsert, boardTest, deleteBoard, insertBoard } from '../modules/boardReducer';\r\nimport BoardInsert from \"../components/BoardInsert\";\r\nimport { useInputs } from \"../lib/hooks\";\r\n\r\nfunction BoardListContainer() {\r\n    const { boards, result } = useSelector(state => state.boardReducer);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ {boardTitle, boardCn}, onChange, reset] = useInputs({\r\n        boardTitle: \"\",\r\n        boardCn: \"\"\r\n    });\r\n\r\n    const onSubmit = useCallback(() => {\r\n        dispatch(insertBoard({boardTitle, boardCn}));\r\n        alert(\"등록완료\");\r\n        reset();\r\n    }, [{boardTitle, boardCn}]);\r\n\r\n    const onDelete = useCallback((boardSeq) => {\r\n        dispatch(deleteBoard(boardSeq));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(getBoardList());\r\n    }, [result]);\r\n\r\n    if (boards.loading) return <div>로딩중...</div>;\r\n    if (boards.error) return <div>에러 발생!</div>;\r\n    if (!boards.data) return null;\r\n\r\n    return (\r\n        <>\r\n            <BoardInsert board={{boardTitle, boardCn}} onChange={onChange} onSubmit={onSubmit} />\r\n            <BoardList boards={boards.data} deleteBoard={onDelete} />\r\n            <button onClick={() => dispatch(boardTest(\"test\", \"test2\"))}>테스트</button>\r\n            {/* <button onClick={() => dispatch(goToBoardInsert())}>등록</button> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(BoardListContainer);","import React from 'react';\r\n\r\nfunction Board({ board }) {\r\n  const { boardTitle, boardCn, boardPhotoSbst } = board;\r\n  const style = {\r\n    width: \"300px\"\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>{boardTitle}</h1>\r\n      <p>{boardCn}</p>\r\n      {boardPhotoSbst != null ? <img style={style} src={\"data:image/jpeg; base64, \"+ boardPhotoSbst}/> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getBoardDtl } from '../modules/boardReducer';\r\nimport Board from '../components/Board';\r\n\r\nfunction BoardContainer({ match }) {\r\n  let { boardSeq } = match.params; // URL 파라미터 조회하기\r\n  \r\n  const { data, loading, error } = useSelector(\r\n    state => state.boardReducer.board[boardSeq]\r\n  ) || {\r\n    loading: false,\r\n    data: null,\r\n    error: null\r\n  }; // 아예 데이터가 존재하지 않을 때가 있으므로, 비구조화 할당이 오류나지 않도록\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (data) return; // 포스트가 존재하면 아예 요청을 하지 않음\r\n    dispatch(getBoardDtl(boardSeq));\r\n  }, [boardSeq, dispatch, data]);\r\n\r\n  if (loading && !data) return <div>로딩중...</div>;\r\n  if (error) return <div>에러 발생!</div>;\r\n  if (!data) return null;\r\n\r\n  return (\r\n    <>\r\n      <Board board={data} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BoardContainer;","import React, { Component, useEffect, useState, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { insertBoard } from '../modules/boardReducer';\r\nimport BoardInsert from \"../components/BoardInsert\";\r\n\r\nfunction BoardInsertContainer() {\r\n  const [board, setBoard] = useState({\r\n    \"boardTitle\": \"\",\r\n    \"boardCn\": \"\"\r\n  });\r\n\r\n  const onChange = useCallback(e => {\r\n    setBoard({\r\n      ...board,\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }, [board]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch(insertBoard(board));\r\n    alert(\"등록완료\");\r\n    setBoard({\r\n      \"boardTitle\": \"\",\r\n      \"boardCn\": \"\"\r\n    });\r\n  }, [board]);\r\n\r\n  return (\r\n      <BoardInsert board={board} onChange={onChange} onSubmit={onSubmit}/>\r\n  )\r\n}\r\n\r\nexport default React.memo(BoardInsertContainer);\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Design System React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-design-system-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useInputs } from \"../lib/hooks\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Spinner,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert\r\n} from \"reactstrap\";\r\n\r\nimport { getBoardList, deleteBoard, insertBoard } from '../modules/boardReducer_json';\r\n\r\nimport BoardList from '../components/BoardList';\r\nimport Input from 'reactstrap/lib/Input';\r\nimport FormGroup from 'reactstrap/lib/FormGroup';\r\nimport Button from 'reactstrap/lib/Button';\r\n\r\nfunction Landing() {\r\n  const dispatch = useDispatch();\r\n  const mainRef = useRef(0);\r\n\r\n  const { boards } = useSelector(state => state.boardReducer_json);\r\n  const [{ boardTitle, boardCn }, onChange, reset] = useInputs({\r\n    boardTitle: \"\",\r\n    boardCn: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    mainRef.current.scrollIntoView();\r\n    dispatch(getBoardList());\r\n  }, []);\r\n\r\n  const [insertAlert, setInsertAlert] = useState(false);\r\n  const [invalidAlert, setInvalidAlert] = useState(false);\r\n  const [deleteAlert, setDeleteAlert] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (insertAlert) {\r\n        setInsertAlert(false);\r\n      } else if (invalidAlert) {\r\n        setInvalidAlert(false);\r\n      } else if (deleteAlert) {\r\n        setDeleteAlert(false);\r\n      }\r\n    }, 3000)\r\n  }, [insertAlert, invalidAlert, deleteAlert]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    if (boardTitle == \"\" || boardCn == \"\") {\r\n      setInvalidAlert(true);\r\n      return;\r\n    }\r\n    dispatch(insertBoard({ boardTitle, boardCn }));\r\n    setInsertAlert(true);\r\n    reset();\r\n  }, [{ boardTitle, boardCn }]);\r\n\r\n  const onDelete = useCallback((boardSeq) => {\r\n    dispatch(deleteBoard(boardSeq));\r\n    setDeleteAlert(true);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <main ref={mainRef}>\r\n        <div className=\"position-relative\">\r\n          {/* shape Hero */}\r\n          <section className=\"section section-lg section-shaped pb-250\">\r\n            <div className=\"shape shape-style-1 shape-default\">\r\n              <span />\r\n              <span />\r\n              <span />\r\n              <span />\r\n              <span />\r\n              <span />\r\n            </div>\r\n            <Container className=\"py-lg-md d-flex\">\r\n              <div className=\"col px-0\">\r\n                <Row>\r\n                  <Col lg=\"6\">\r\n                    <h1 className=\"display-3 text-white\">\r\n                      Board\r\n                        <span>insert board</span>\r\n                    </h1>\r\n                    <FormGroup>\r\n                      <Input type=\"text\" placeholder=\"Title\" style={{ marginBottom: '10px' }} name=\"boardTitle\" value={boardTitle} onChange={onChange} />\r\n                      <Input type=\"textarea\" placeholder=\"Content ...\" rows=\"3\" name=\"boardCn\" value={boardCn} onChange={onChange} style={{ marginBottom: '10px' }} />\r\n                      <Button type=\"button\" color=\"secondary\" size=\"m\" onClick={onSubmit}>submit</Button>\r\n                    </FormGroup>\r\n                    {/* \r\n                      <p className=\"lead text-white\">\r\n                        The design system comes with four pre-built pages to\r\n                        help you get started faster. You can change the text and\r\n                        images and you're good to go.\r\n                      </p>\r\n                      <div className=\"btn-wrapper\">\r\n                        <Button\r\n                          className=\"btn-icon mb-3 mb-sm-0\"\r\n                          color=\"info\"\r\n                          href=\"https://demos.creative-tim.com/argon-design-system-react/#/documentation/alerts?ref=adsr-landing-page\"\r\n                        >\r\n                          <span className=\"btn-inner--icon mr-1\">\r\n                            <i className=\"fa fa-code\" />\r\n                          </span>\r\n                          <span className=\"btn-inner--text\">Components</span>\r\n                        </Button>\r\n                        <Button\r\n                          className=\"btn-white btn-icon mb-3 mb-sm-0 ml-1\"\r\n                          color=\"default\"\r\n                          href=\"https://www.creative-tim.com/product/argon-design-system-react?ref=adsr-landing-page\"\r\n                        >\r\n                          <span className=\"btn-inner--icon mr-1\">\r\n                            <i className=\"ni ni-cloud-download-95\" />\r\n                          </span>\r\n                          <span className=\"btn-inner--text\">\r\n                            Download React\r\n                          </span>\r\n                        </Button>\r\n                      </div> */}\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Container>\r\n            {/* SVG separator */}\r\n            <div className=\"separator separator-bottom separator-skew\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                preserveAspectRatio=\"none\"\r\n                version=\"1.1\"\r\n                viewBox=\"0 0 2560 100\"\r\n                x=\"0\"\r\n                y=\"0\"\r\n              >\r\n                <polygon\r\n                  className=\"fill-white\"\r\n                  points=\"2560 0 2560 100 0 100\"\r\n                />\r\n              </svg>\r\n            </div>\r\n          </section>\r\n          {/* 1st Hero Variation */}\r\n          {/* ALERT */}\r\n          <Alert color=\"success\" isOpen={insertAlert} fade={true} style={{ position: \"fixed\", width: \"100%\", top: \"0px\", zIndex: 100}}>\r\n            <span className=\"alert-inner--icon\">\r\n              <i className=\"ni ni-like-2\" />\r\n            </span>\r\n            <span className=\"alert-inner--text ml-1\">\r\n              <strong>SUCCESS!</strong> 게시물이 등록되었습니다.\r\n          </span>\r\n          </Alert>\r\n          <Alert color=\"danger\" isOpen={invalidAlert} fade={true} style={{ position: \"fixed\", width: \"100%\", top: \"0px\", zIndex: 100}}>\r\n            <span className=\"alert-inner--icon\">\r\n              <i className=\"ni ni-support-16\" />\r\n            </span>\r\n            <span className=\"alert-inner--text ml-1\">\r\n              <strong>DANGER!</strong> 내용을 입력해주세요!\r\n          </span>\r\n          </Alert>\r\n          <Alert color=\"warning\" isOpen={deleteAlert} fade={true} style={{ position: \"fixed\", width: \"100%\", top: \"0px\", zIndex: 100}}>\r\n            <span className=\"alert-inner--icon\">\r\n              <i className=\"ni ni-bell-55\" />\r\n            </span>\r\n            <span className=\"alert-inner--text ml-1\">\r\n              <strong>SUCCESS!</strong> 게시물이 삭제되었습니다!\r\n          </span>\r\n          </Alert>\r\n        </div>\r\n        {\r\n          boards == undefined ?\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: '-80px' }}>\r\n              <Spinner type=\"grow\" color=\"light\" style={{ width: '8rem', height: '8rem' }} />\r\n            </div> :\r\n            <section className=\"section section-lg pt-lg-0 mt--200\">\r\n            <Container>\r\n              <Row className=\"justify-content-center\">\r\n                <Col lg=\"12\">\r\n                  <Row className=\"row-grid\">\r\n                    <BoardList boards={boards} deleteBoard={onDelete} />\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </section>\r\n        }\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Landing);\r\n","import React from \"react\";\r\nimport {\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nimport BoardListContainer from '../containers/BoardListContainer';\r\nimport BoardContainer from \"../containers/BoardContainer\";\r\nimport BoardInsertContainer from \"../containers/BoardInsertContainer\";\r\nimport Landing from \"../containers/Git\";\r\nimport Git from \"../containers/Git\";\r\n\r\n// import useReactRouter from 'use-react-router';\r\n\r\nexport const routes = [\r\n  {\r\n    path: \"/all-ears-front\",\r\n    component: Git,\r\n    exact: true\r\n  },\r\n  {\r\n    path: \"/all-ears-front/board/list\",\r\n    component: Landing,\r\n    exact: true\r\n  },\r\n  {\r\n    path: \"/all-ears-front/board/detail/:boardSeq\",\r\n    component: BoardContainer,\r\n    exact: true\r\n  },\r\n  {\r\n    path: \"/all-ears-front/board/insert\",\r\n    component: BoardInsertContainer,\r\n    exact: true\r\n  },\r\n  {\r\n    path: \"/all-ears-front/list\",\r\n    component: BoardListContainer,\r\n    exact: true\r\n  }\r\n  // {\r\n  //   path: \"/:id\",\r\n  //   component: PostPage,\r\n  //   exact: true\r\n  //   //   routes: [\r\n  //   //     {\r\n  //   //       path: \"/tacos/bus\",\r\n  //   //       component: Bus\r\n  //   //     },\r\n  //   //     {\r\n  //   //       path: \"/tacos/cart\",\r\n  //   //       component: Cart\r\n  //   //     }\r\n  //   //   ]\r\n  // },\r\n  \r\n];\r\n\r\nexport const RouteWithSubRoutes = (route) => {\r\n  return (\r\n    <Route\r\n      path={route.path}\r\n      render={props => (\r\n        // pass the sub-routes down to keep nesting\r\n        <route.component {...props} exact={route.exact} routes={route.routes} />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\n// export const RouterHookSample = () => {\r\n//   const { history, location, match } = useReactRouter;\r\n//   console.log({ history, location, match });\r\n//   return null;\r\n// }\r\n","import React, { Component } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport './App.css';\nimport { routes, RouteWithSubRoutes } from './routes/routes';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef;\n  }\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      // <>\n      //   <GlobalStyle />\n      //   <TodoTemplate>\n      //     <TodoHead />\n      //     <TodoList />\n      //     <TodoCreate />\n      //   </TodoTemplate>\n      // </>\n      <>\n        <div>\n          <Switch>\n            {routes.map((route, i) => (\n              <RouteWithSubRoutes key={i} {...route} />\n            ))}\n          </Switch>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// router\n// createStore 와 루트 리듀서 불러오기\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './modules';\n// **** (1) Provider 불러오기\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport ReduxThunk from 'redux-thunk';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\n// import './index.css';\nimport App from './App';\n\nimport \"assets/vendor/nucleo/css/nucleo.css\";\nimport \"assets/vendor/font-awesome/css/font-awesome.min.css\";\nimport \"assets/scss/argon-design-system-react.scss?v1.1.0\";\n\nconst customHistory = createBrowserHistory();\nconst store = createStore(\n  rootReducer,\n  // logger 를 사용하는 경우, logger가 가장 마지막에 와야합니다.\n  composeWithDevTools(\n    applyMiddleware(\n      ReduxThunk.withExtraArgument({ history: customHistory }),\n      logger\n    )\n  )\n); // 여러개의 미들웨어를 적용 할 수 있습니다.\n\n// **** (2) Provider 렌더링해서 기존의 App 감싸주기\nReactDOM.render(\n  <Router history={customHistory} basename=\"/all-ears-front\">\n    <Provider store={store}>    \n        <App />\n    </Provider>\n  </Router>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}